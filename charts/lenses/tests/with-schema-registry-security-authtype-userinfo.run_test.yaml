suite: enable Schema Registry authentication is enabled and authType is set to USER_INFO
templates:
  - deployment.yaml
tests:
  - it: should work without security enabled
    set:
      lenses:
          schemaRegistries:
            enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_URLS
            value:  |-
              [
                {
                  url: "http://schema-registry:8081"
                }
              ]
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_AUTH
            value: ""
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_KAFKA_SETTINGS_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE
            value: ""
  - it: should work with security enabled but without specific authType
    set:
      lenses:
          schemaRegistries:
            enabled: true
            security:
              enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_URLS
            value:  |-
              [
                {
                  url: "http://schema-registry:8081"
                }
              ]
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_AUTH
            value: ""
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_KAFKA_SETTINGS_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE
            value: ""
  - it: should work with security enabled and with specific authType other than USER_INFO
    set:
      lenses:
          schemaRegistries:
            enabled: true
            security:
              enabled: true
              authType: foobar
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_URLS
            value:  |-
              [
                {
                  url: "http://schema-registry:8081"
                }
              ]
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_AUTH
            value: foobar
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_KAFKA_SETTINGS_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE
            value: foobar
  - it: should work with security enabled, specific authType USER_INFO, username and password
    set:
      lenses:
          schemaRegistries:
            enabled: true
            security:
              enabled: true
              authType: USER_INFO
              username: foo
              password: bar
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_URLS
            value:  |-
              [
                {
                  url: "http://schema-registry:8081"
                }
              ]
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: RELEASE-NAME-lenses
                key: schema.registry.password
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_AUTH
            value: USER_INFO
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_USERNAME
            value: foo
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_KAFKA_SETTINGS_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE
            value: USER_INFO
  - it: should work with security enabled, specific authType USER_INFO, and username and password taken from external secrets
    values:
      - values/with-schema-registry-and-external-secrets.yaml
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_URLS
            value:  |-
              [
                {
                  url: "http://schema-registry:8081"
                }
              ]
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_AUTH
            value: USER_INFO
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_KAFKA_SETTINGS_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE
            value: USER_INFO
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_USERNAME
            valueFrom:
              secretKeyRef:
                name: lenses-super-secrets
                key: lenses-schema-registry-username
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_SCHEMA_REGISTRY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: lenses-super-secrets
                key: lenses-schema-registry-password
