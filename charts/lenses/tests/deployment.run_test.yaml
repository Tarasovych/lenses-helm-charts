suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should test default values
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: lensesio/lenses:5.0.0
      - isEmpty:
          path: metadata.annotations

  - it: should test docker image tag override
    set:
      image.tag: bar
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: lensesio/lenses:bar

  - it: should test replica set cannot be overriden
    set:
      replicaCount: 10
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 1

  - it: should add custom annotations
    set:
      annotations:
        foo: bar
    asserts:
      - equal:
          path: metadata.annotations.foo
          value: bar

  - it: should add custom labels
    set:
      labels:
        foo: bar
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.labels.foo
          value: bar
      - equal:
          path: spec.template.metadata.labels.foo
          value: bar

  - it: should remove livenessProbe if disabled
    set:
      lenses:
        livenessProbe:
          enabled: false
    asserts:
      - isEmpty:
          path: spec.template.spec.containers[0].livenessProbe

  - it: should add pauseExec if enabled
    set:
      lenses:
        pauseExec:
          enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: PAUSE_EXEC
            value: "true"

  - it: should add env vars when set
    set:
      lenses:
        additionalEnv:
          - name: LENSES_CONNECTORS_INFO
            value: |
              {
                "foo": "bar"
              }
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: LENSES_CONNECTORS_INFO
            value: |
              {
                "foo": "bar"
              }

  - it: should fail if zookeepers key is present in lenses dict
    set:
      lenses:
        zookeepers:
          enabled: true
    asserts:
      - failedTemplate:
          errorMessage: Setting configuration in the chart is deprecated. Please use the provision yaml instead. See documentation here 


  - it: should fail if license key is present in lenses dict
    set:
      lenses:
        license:
    asserts:
      - failedTemplate:
          errorMessage: Setting configuration in the chart is deprecated. Please use the provision yaml instead. See documentation here 
  - it: should fail if licenseUrl key is present in lenses dict
    set:
      lenses:
        licenseUrl:
    asserts:
      - failedTemplate:
          errorMessage: Setting configuration in the chart is deprecated. Please use the provision yaml instead. See documentation here 

  - it: should fail if schemaRegistries key is present in lenses dict
    set:
      lenses:
        schemaRegistries:
          enabled: true
    asserts:
      - failedTemplate:
          errorMessage: Setting configuration in the chart is deprecated. Please use the provision yaml instead. See documentation here 

  - it: should fail if clusterConnect key is present in lenses dict
    set:
      lenses:
        connectClusters:
          enabled: true
    asserts:
      - failedTemplate:
          errorMessage: Setting configuration in the chart is deprecated. Please use the provision yaml instead. See documentation here 

  - it: should fail if kafka key is present in lenses dict
    set:
      lenses:
        kafka:
          enabled: true
    asserts:
      - failedTemplate:
          errorMessage: Setting configuration in the chart is deprecated. Please use the provision yaml instead. See documentation here 