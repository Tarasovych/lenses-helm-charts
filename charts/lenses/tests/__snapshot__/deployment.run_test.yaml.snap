should test default values:
  1: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations: null
      labels:
        app: RELEASE-NAME
        chart: lenses-4.3.5
        component: lenses
        heritage: Helm
        lenses.io/app: RELEASE-NAME
        lenses.io/app.type: lenses
        release: RELEASE-NAME
      name: RELEASE-NAME
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: RELEASE-NAME
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "9102"
            prometheus.io/scrape: "true"
          labels:
            app: RELEASE-NAME
            component: lenses
            containerPort: "3030"
            hostPort: "3030"
        spec:
          containers:
          - env:
            - name: LENSES_OPTS
              value: ""
            - name: LENSES_PORT
              value: "3030"
            - name: LENSES_JMX_PORT
              value: "9101"
            - name: LENSES_KAFKA_BROKERS
              value: PLAINTEXT://kafka:9092
            - name: LENSES_SCHEMA_REGISTRY_MODE
              value: ""
            - name: LENSES_ALERT_CONSUMERS_LAG_THRESHOLD
              value: "50000"
            - name: LENSES_ALERT_PLUGINS
              value: ""
            - name: LENSES_TOPICS_AUDITS
              value: _kafka_lenses_audits
            - name: LENSES_TOPICS_METRICS
              value: _kafka_lenses_metrics
            - name: LENSES_TOPICS_PROFILES
              value: _kafka_lenses_profiles
            - name: LENSES_TOPICS_PROCESSORS
              value: _kafka_lenses_processors
            - name: LENSES_TOPICS_CLUSTER
              value: _kafka_lenses_cluster
            - name: LENSES_TOPICS_ALERTS_STORAGE
              value: _kafka_lenses_alerts
            - name: LENSES_TOPICS_ALERTS_SETTINGS
              value: _kafka_lenses_alert_settings
            - name: LENSES_TOPICS_LSQL_STORAGE
              value: _kafka_lenses_lsql_storage
            - name: LENSES_TOPICS_METADATA
              value: _kafka_lenses_topics_metadata
            - name: LENSES_TOPICS_EXTERNAL_TOPOLOGY
              value: __topology
            - name: LENSES_SCHEMA_REGISTRY_TOPICS
              value: null
            - name: LENSES_SQL_EXECUTION_MODE
              value: IN_PROC
            - name: LENSES_SECRET_FILE
              value: /mnt/secrets/security.conf
            - name: LENSES_SCHEMA_REGISTRY_AUTH
              value: ""
            - name: LENSES_KAFKA_SETTINGS_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE
              value: ""
            - name: LENSES_KAFKA_SETTINGS_CLIENT_SECURITY_PROTOCOL
              value: PLAINTEXT
            - name: LENSES_KAFKA_SETTINGS_CLIENT_SASL_MECHANISM
              value: GSSAPI
            - name: LENSES_DEPLOYMENTS_EVENTS_BUFFER_SIZE
              value: "10000"
            - name: LENSES_DEPLOYMENTS_ERRORS_BUFFER_SIZE
              value: "1000"
            - name: LENSES_DEPLOYMENT_CONNECT_STATUS_INTERVAL
              value: 30 second
            - name: LENSES_DEPLOYMENT_CONNECT_ACTIONS_BUFFER_SIZE
              value: "1000"
            - name: LC_KUBERNETES_MODE
              value: "true"
            - name: LT_PACKAGE
              value: helm
            - name: LT_PACKAGE_VERSION
              value: 4.3.5
            image: lensesio/lenses:4.3.2
            imagePullPolicy: IfNotPresent
            livenessProbe:
              httpGet:
                path: /
                port: 3030
              initialDelaySeconds: 300
              periodSeconds: 10
            name: lenses
            ports:
            - containerPort: 3030
            resources:
              limits:
                memory: 5Gi
              requests:
                memory: 4Gi
            volumeMounts:
            - mountPath: /mnt/secrets
              name: secrets
            - mountPath: /etc/keytab
              name: secrets
              subPath: keytab
            - mountPath: /etc/registry.keytab
              name: secrets
              subPath: registry.keytab
            - mountPath: /mnt/settings/security.append.conf
              name: secrets
              subPath: security.append.conf
            - mountPath: /mnt/settings/lenses.append.conf
              name: config
              subPath: lenses.append.conf
            - mountPath: /data/storage
              name: storage
          serviceAccountName: default
          volumes:
          - name: secrets
            secret:
              items:
              - key: jvm.truststore.jks
                path: jvm.truststore.jks
              - key: security.conf
                path: security.conf
              - key: security.append.conf
                path: security.append.conf
              - key: lenses.keytab
                path: lenses.keytab
              - key: keytab
                path: keytab
              - key: client.keystore.jks
                path: client.keystore.jks
              - key: client.truststore.jks
                path: client.truststore.jks
              - key: jaas.conf
                path: jaas.conf
              - key: schema.registry.keystore.jks
                path: schema.registry.keystore.jks
              - key: schema.registry.truststore.jks
                path: schema.registry.truststore.jks
              - key: lenses.opts.keystore.jks
                path: lenses.opts.keystore.jks
              - key: lenses.opts.truststore.jks
                path: lenses.opts.truststore.jks
              secretName: RELEASE-NAME
          - configMap:
              name: RELEASE-NAME
            name: config
          - name: storage
            persistentVolumeClaim:
              claimName: RELEASE-NAME-claim
