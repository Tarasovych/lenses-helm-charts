kind: Secret
apiVersion: v1
metadata:
  name: {{ include "fullname" . }}
  labels:
    app: {{ include "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    lenses.io/app: "{{ include "fullname" . }}"
    lenses.io/app.type: lenses-secret
data:
  lenses.tls.keystore.jks: |-
    {{- .Values.lenses.tls.keyStoreFileData | default "" | nindent 4 }}
  lenses.tls.truststore.jks: |-
    {{- .Values.lenses.tls.trustStoreFileData | default "" | nindent 4 }}
  lenses.opts.keystore.jks: |-
    {{- .Values.lenses.opts.keyStoreFileData | default "" | nindent 4 }}
  lenses.opts.truststore.jks: |-
    {{- .Values.lenses.opts.trustStoreFileData | default "" | nindent 4 }}
  lenses.keytab: |-
    {{- .Values.lenses.security.kerberos.keytabData | default "" | nindent 4 }}
  saml.keystore.jks: |-
    {{- .Values.lenses.security.saml.keyStoreFileData | default "" | nindent 4 }}
  saml.idp.xml: |-
    {{ .Values.lenses.security.saml.metadataFileData | default "" | nindent 4 }}
  schema.registry.truststore.jks: |-
    {{ .Values.lenses.schemaRegistries.ssl.trustStoreFileData | default "" | nindent 4 }}
  schema.registry.keystore.jks: |-
    {{ .Values.lenses.schemaRegistries.ssl.keyStoreFileData | default "" | nindent 4 }}
stringData:
  {{- if .Values.lenses.provision }}
  provision.yaml: |-
    {{- toYaml .Values.lenses.provision | nindent 4 }}
  {{- end }}
  {{- if and .Values.lenses.connectClusters.enabled (not .Values.lenses.connectClusters.external) }}
  connect.clusters: |-
    {{- include "connect" . | nindent 4 }}
  {{- end }}
  security.conf: |-
    {{- include "securityConf" . | nindent 4 }}
  security.append.conf: |-
    {{- .Values.lenses.security.append.conf | nindent 4 }}
  license: {{ .Values.lenses.license | quote }}
  schema.registry.key.password: {{ .Values.lenses.schemaRegistries.ssl.keyPassword | default "" | quote }}
  schema.registry.keystore.password: {{ .Values.lenses.schemaRegistries.ssl.keyStorePassword | default "" | quote }}
  schema.registry.truststore.password: {{ .Values.lenses.schemaRegistries.ssl.trustStorePassword | default "" | quote }}
  {{- if and .Values.lenses.schemaRegistries.security.password (not (eq (default "not-external" .Values.lenses.schemaRegistries.security.password) "external")) }}
  schema.registry.password: {{ .Values.lenses.schemaRegistries.security.password | default "" | quote }}
  {{- end }}
  lenses.tls.keystore.password: {{ .Values.lenses.tls.keyStorePassword | default "" | quote }}
  lenses.tls.key.password: {{ .Values.lenses.tls.keyPassword | default "" | quote }}
  lenses.tls.truststore.password: {{ .Values.lenses.tls.trustStorePassword | default "" | quote }}
  lenses.opts.keystore.password: {{ .Values.lenses.opts.keyStorePassword | default "" | quote }}
  {{- if .Values.lenses.opts.trustStoreFileData }}
  lenses.opts.truststore.password: {{ required "When you set trustStoreFileData, you also need to set trustStorePassword" .Values.lenses.opts.trustStorePassword | quote }}
  {{- end }}

  {{- if .Values.lenses.jvm.trustStoreFileData }}
  {{/* Deliberately fail helm deployment */}}
  {{ required ".Values.lenses.jvm.trustStoreFileData is deprecated in favor of Values.lenses.opts.trustStoreFileData, please use the latter." nil }}
  {{- end }}
  {{- if .Values.lenses.jvm.trustStorePassword }}
  {{/* Deliberately fail helm deployment */}}
  {{ required ".Values.lenses.jvm.trustStorePassword is deprecated in favor of Values.lenses.opts.trustStorePassword, please use the latter." nil }}
  {{- end }}
