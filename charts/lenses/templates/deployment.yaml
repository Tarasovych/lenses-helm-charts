apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "fullname" . | quote }}
  labels:
    app: {{ include "fullname" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: "lenses"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "fullname" . | quote }}
        component: "lenses"
        hostPort: {{ .Values.restPort | quote }}
        containerPort: {{ .Values.restPort | quote }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
        prometheus.io/path: "/metrics"
    spec:
      volumes:             
        - name: secrets
          secret:
            secretName: {{ include "fullname" . | quote }}
            items:
              - key: security.conf
                path: security.conf
              {{- if eq .Values.lenses.security.mode "KERBEROS" }} 
              - key: lenses.keytab
                path: lenses.keytab
              {{- end }} 
              {{- if .Values.lenses.kafka.ssl.enabled }}
              - key: client.keystore.jks
                path: client.keystore.jks
              - key: client.truststore.jks 
                path: client.truststore.jks
              {{- end }}  
              {{- if .Values.lenses.kafka.sasl.enabled }}
              - key: jaas.conf
                path: jaas.conf
              - key: keytab
                path: keytab  
              {{- end }}
        {{- if and .Values.lenses.kafka.sasl.enabled (eq .Values.lenses.kafka.sasl.mechanism "GSSAPI") }}
        - name: krb
          configMap:
            name: {{ include "fullname" . | quote }}
        {{- end }}  
      serviceAccountName: {{ .Values.serviceAccount }}      
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.restPort }}
        livenessProbe:
          httpGet:
            path: /
            port: 3030
          initialDelaySeconds: 120
          periodSeconds: 3
        volumeMounts:
          - name: secrets
            mountPath: "/mnt/secrets"
          {{- if and .Values.lenses.kafka.sasl.enabled (eq .Values.lenses.kafka.sasl.mechanism "GSSAPI") }}
          - name: krb
            mountPath: "/etc/krb5.conf"
            subPath: "krb5.conf"
          {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}     
        env:
        {{- if .Values.lenses.licenseUrl }} 
        - name: LICENSE_URL
          value: {{ .Values.lenses.licenseUrl }}
        {{- end }}
        {{- if .Values.lenses.kafka.sasl.enabled }}
        - name: LENSES_OPTS
          value: "-Djava.security.auth.login.config=/mnt/secrets/jaas.conf"
        {{- end }}
        {{- if.Values.lenses.jvm.heapOpts}}
        - name: LENSES_HEAP_OPTS
          value: {{ .Values.lenses.jvm.heapOpts | quote }}
        {{- end }}  
        {{- if.Values.lenses.jvm.logBackOpts}}
        - name: LENSES_LOG4J_OPTS
          value: {{ .Values.lenses.jvm.logBackOpts | quote }}
        {{- end }} 
        {{- if.Values.lenses.jvm.performanceOpts}}
        - name: LENSES_PERFORMANCE_OPTS
          value: {{ .Values.lenses.jvm.performanceOpts | quote }}
        {{- end }} 
        {{- if .Values.ingress.enabled }}
        - name: LENSES_ROOT_PATH
          value: {{ include "ingressPath" . | quote }}
        {{- end }}
        - name: LICENSE
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key: "license"   
        - name: LENSES_KUBERNETES_IMAGE_NAME
          value: {{ .Values.lenses.sql.processorImage | quote }}
        - name: LENSES_KUBERNETES_IMAGE_TAG
          value: {{ .Values.lenses.sql.processorImageTag | quote }}
        - name: LENSES_KUBERNETES_SERVICE_ACCOUNT
          value: {{ .Values.serviceAccount | quote }}
        - name: LENSES_SQL_EXECUTION_MODE
          value: "KUBERNETES"        
        - name: LENSES_KUBERNETES_CONFIG_FILE
          value: '""'
        - name: LENSES_PORT
          value: {{ .Values.restPort | quote }}
        - name: LENSES_JMX_PORT
          value: "9101"
        - name: LENSES_KAFKA_BROKERS
          value: {{ include "bootstrapBrokers" . | quote }}
        - name: LENSES_ZOOKEEPER_HOSTS
          value: |-
{{ include "zookeepers" . | indent 12 }}

        {{- if .Values.lenses.zookeepers.chroot }}
        - name: LENSES_ZOOKEEPER_CHROOT
          value: {{ .Values.lenses.zookeepers.chroot | quote }}
        {{- end }}

        - name: LENSES_SCHEMA_REGISTRY_URLS
          value: |-
{{ include "registries" . | indent 12 }}
        - name: LENSES_CONNECT_CLUSTERS
          value: |-
{{ include "connect" . | indent 12 }}         
        - name: LENSES_ALERT_MANAGER_ENDPOINTS
          value: {{ include "alertManagers" . | quote }}  
        - name: LENSES_ALERT_MANAGER_SOURCE
          value: "{{ .Values.lenses.alertManagers.sourceName }}-{{ include "fullname" .}}-{{ .Release.Namespace }}"
        - name: LENSES_ALERT_CONSUMERS_LAG_THRESHOLD
          value: {{ .Values.lenses.alertManagers.consumersLagThreshold | quote }}
        - name: LENSES_ALERT_SLACK_ENABLED
          value: {{ .Values.lenses.slack.enabled | quote }}
        {{- if .Values.lenses.slack.enabled }}                            
        - name: LENSES_ALERT_SLACK_WEBHOOK_URL
          value: {{ .Values.lenses.slack.webhookUrl | quote }}
        - name: LENSES_ALERT_SLACK_ICON_URL
          value: "https://www.landoop.com/images/landoop-dark.svg"
        - name: LENSES_ALERT_SLACK_USERNAME
          value: {{ .Values.lenses.slack.username | quote }}
        - name: LENSES_ALERT_SLACK_CHANNEL
          value: {{ .Values.lenses.slack.channel | quote }}
        {{- end }}  
        - name: LENSES_GRAFANA
          value: {{ .Values.lenses.grafanaUrl | quote }}  

        # lenses topics      
        - name: LENSES_TOPICS_AUDITS
          value: {{ include "auditTopic" . | quote }}
        - name: LENSES_TOPICS_METRICS
          value: {{ include "metricTopic" . | quote }}  
        - name: LENSES_TOPICS_PROFILES
          value: {{ include "profileTopic" . | quote }} 
        - name: LENSES_TOPICS_PROCESSORS
          value: {{ include "processorTopic" . | quote }}           
        - name: LENSES_TOPICS_CLUSTER
          value: {{ include "clusterTopic" . | quote }} 
        - name: LENSES_TOPICS_ALERTS_STORAGE
          value: {{ include "alertTopic" . | quote }}
        - name: LENSES_TOPICS_ALERTS_SETTINGS
          value: {{ include "alertSettingTopic" . | quote }} 
        - name: LENSES_TOPICS_LSQL_STORAGE
          value: {{ include "lsqlTopic" . | quote }} 
        - name: LENSES_TOPICS_METADATA
          value: {{ include "metadataTopic" . | quote }}                                                           
        - name: LENSES_TOPICS_EXTERNAL_TOPOLOGY
          value: {{ include "topologyTopic" . | quote }} 
        - name: LENSES_TOPICS_EXTERNAL_METRICS
          value: {{ include "externalMetricsTopic" . | quote }}            
          
        # ssl/sasl
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SECURITY_PROTOCOL
          value: {{ include "securityProtocol" . | quote }}
        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SECURITY_PROTOCOL
          value: {{ include "securityProtocol" . | quote }}  

        {{- if .Values.lenses.kafka.sasl.enabled }}
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SASL_MECHANISM
          value: {{ default "GSSAPI" .Values.lenses.kafka.sasl.mechanism | quote }}    
        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SASL_MECHANISM
          value: {{ default "GSSAPI" .Values.lenses.kafka.sasl.mechanism | quote }}    
        {{- end }}  
   
        {{- if .Values.lenses.kafka.ssl.enabled }}
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SSL_TRUSTSTORE_LOCATION
          value: "/mnt/secrets/client.truststore.jks"
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SSL_KEYSTORE_LOCATION
          value: "/mnt/secrets/client.keystore.jks"
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key:  "client.truststore.password"                  
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key:  "client.keystore.password"
        - name: LENSES_KAFKA_SETTINGS_CONSUMER_SSL_KEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key:  "client.key.password"      

        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SSL_TRUSTSTORE_LOCATION
          value: "/mnt/secrets/client.truststore.jks"
        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SSL_KEYSTORE_LOCATION
          value: "/mnt/secrets/client.keystore.jks"
        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SSL_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key:  "client.truststore.password"                  
        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key:  "client.keystore.password"
        - name: LENSES_KAFKA_SETTINGS_PRODUCER_SSL_KEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . | quote }}
              key:  "client.key.password"                              
        {{- end }}

        # extras configs
        {{- range $key, $value := .Values.configOverrides }}
        - name: {{ printf "%s" $key | replace "." "_" | upper | quote }}
          value: {{ $value | quote }}
        {{- end }}