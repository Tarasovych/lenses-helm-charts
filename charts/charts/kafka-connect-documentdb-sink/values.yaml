# Basic info
replicaCount: "__REQUIRED__"
secretsRef: "__REQUIRED__"
image:
  repository: registry.hub.docker.com/datamountaineer/kafka-connect-documentdb-sink
  tag: 0.3.0.1
  pullPolicy: IfNotPresent

# Resource management
resources:
  limits:
    memory: 512Mi
  requests:
    memory: 256Mi
javaHeap: 256M

# Monitoring
monitoring:
  pipeline: "__REQUIRED__"
  enabled: true
  port: 9102
  path: "/metrics"

# SSL/TLS options can be enabled, some connectors provide SSL support, others the newer TLS
# Set the corresponding value type to true. For SSL persistent volumes or hostPaths will be
# mounted under /connector-extra-config. Set the connectors ssl/tls option paths to be use this
# TLS is done via Secrets, create a secret for containing the certificates (base64 encoded) and
# create a secret for them, adding the name of the secret to the `secretsRef` other wise if using
# Eneco's Landscaper it will do this for you.

# SSL mount path on hosts, should be the base path of any ssl keystore/truststore paths
ssl:
  enabled: false
  # Path to the directory on the hosts
  path: /ssl

  # If persistent volumes should be used for ssl keystore/truststore paths
  persistentVolumes:
    enable: false
    existingClaim:

# TLS, for those connectors supporting TLS certificates rather than ssl key/truststores
# contents for mount take from config map
tls:
  enabled: false

## Avro schemas, for those connectors, MQTT and JMS source that support Avro converters we
## need the schemas, so we'll mount as a ConfigMap. Set the key value pairs, filename and data
## matching the value option avroSchema. Key is the file name, value is the avro schema contents
#avroSchemaFiles:
#  schema_file_name:  ""

applicationId: "__REQUIRED__"
topics: "__REQUIRED__"
tasksMax: 3


connectorClass: com.datamountaineer.streamreactor.connect.azure.documentdb.sink.DocumentDbSinkConnector
# proxy Specifies the connection proxy details. type: STRING importance: LOW
proxy: 

# retryInterval The time in milliseconds between retries. type: INT importance: MEDIUM
retryInterval: 60000

# enabled Enables the output for how many records have been processed type: BOOLEAN importance: MEDIUM
enabled: false

# db The Azure DocumentDb target database. type: STRING importance: HIGH
db: "__REQUIRED__"

# errorPolicy Specifies the action to be taken if an error occurs while inserting the data
# There are two available options:
# NOOP - the error is swallowed
# THROW - the error is allowed to propagate.
# RETRY - The exception causes the Connect framework to retry the message. The number of retries is based on
# The error will be logged automatically type: STRING importance: HIGH
errorPolicy: THROW

# kcql KCQL expression describing field selection and data routing to the target DocumentDb. type: STRING importance: HIGH
kcql: "__REQUIRED__"

# dbCreate If set to true it will create the database if it doesn't exist. If this is set to default(false) an exception will be raised. type: BOOLEAN importance: MEDIUM
dbCreate: false

# masterKey The connection master key type: PASSWORD importance: HIGH
masterKey: "__REQUIRED__"

# consistencyLevel Determines the write visibility. There are four possible values: Strong,BoundedStaleness,Session or Eventual type: STRING importance: HIGH
consistencyLevel: Session

# maxRetries The maximum number of times to try the write again. type: INT importance: MEDIUM
maxRetries: 20

# endpoint The Azure DocumentDb end point. type: STRING importance: HIGH
endpoint: "__REQUIRED__"

topics: __REQUIRED__
